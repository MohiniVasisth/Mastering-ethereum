[[consensus]]
== Consenso

((("consenso", id="ix_14consensus-asciidoc0", range="startofrange")))A lo largo de este libro hemos hablado de "reglas de consenso&#x201d;&#x2014;las reglas que todos deben aceptar para que el sistema funcione de manera descentralizada y aún así, determinista. En ciencias de la computación, el término _consenso_ es anterior a las cadenas de bloques y está relacionado con el problema más amplio de sincronizar el estado en sistemas distribuidos, de tal modo que de entre los diferentes participantes que hay en un sistema distribuido, todos (eventualmente) estarán de acuerdo en un solo estado en todo el sistema. A esto se le llama "lograr un consenso."

Cuando se trata de la función central del mantenimiento y la verificación de registros descentralizados, puede resultar problemático depender únicamente de la confianza para garantizar que la información derivada de las actualizaciones estatales sea correcta. Este desafío bastante general es particularmente pronunciado en las redes descentralizadas porque no existe una entidad central para decidir qué es verdad. La falta de una entidad central de toma de decisiones es uno de los principales atractivos de las plataformas basadas en las cadenas de bloques, debido a la capacidad resultante para resistir la censura y la falta de dependencia de la autoridad para el permiso de acceso a la información. Sin embargo, estos beneficios tienen un costo: sin un árbitro confiable, cualquier desacuerdo, engaño o diferencia debe conciliarse utilizando otros medios. Los algoritmos de consenso son el mecanismo utilizado para conciliar la seguridad con la descentralización.

En las cadenas de bloques, el consenso es una propiedad crítica del sistema. En pocas palabras, ¡hay dinero en juego! Entonces, en el contexto de las cadenas de bloques, el _consenso_ se trata de poder llegar a un estado común, mientras se mantiene la descentralización. En otras palabras, el consenso tiene como objetivo producir un sistema de _reglas estrictas sin reglas_. No hay una sola persona, organización o grupo pass:["a cargo&#x201d;;] más bien, el poder y el control se difunden a través de una amplia red de participantes, en donde el interés propio se satisface siguiendo las reglas y comportándose con honestidad.

La capacidad de llegar a un consenso a través de una red distribuida, en condiciones adversas, sin centralizar el control, es el principio fundamental de todas las cadenas de bloques públicas abiertas. Para abordar este desafío y mantener la valiosa propiedad de la descentralización, la comunidad continúa experimentando con diferentes modelos de consenso. Este capítulo explora estos modelos de consenso y su impacto esperado en cadenas de bloques de contratos inteligentes como Ethereum.

[NOTE]
====
Si bien los algoritmos de consenso son una parte importante de cómo funcionan las cadenas de bloques, éstos operan en una capa fundamental, muy por debajo de la abstracción de los contratos inteligentes. En otras palabras, la mayoría de los detalles del consenso están ocultos a los redactores de contratos inteligentes. No se necesita saber cómo funcionan para hacer uso de Ethereum, como tampoco se necesita saber cómo funciona el enrutamiento para usar la Internet.
====

=== Consenso mediante prueba de trabajo (PoW)

((("consenso","vía prueba de trabajo")))((("prueba de trabajo (PoW)","consenso mediante")))El creador de la cadena de bloques original, Bitcoin, inventó un _algoritmo de consenso_ llamado _prueba de trabajo_ (del inglés, PoW). Podría decirse que PoW es el invento más importante que sustenta Bitcoin. El término coloquial para PoW es "minería," lo que crea un malentendido sobre el propósito principal del consenso. A menudo, la gente asume que el propósito de la minería es la creación de nuevas monedas, ya que el propósito de la minería en el mundo real es la extracción de metales preciosos u otros recursos. Más bien, el propósito real de la minería (y el de todos los demás modelos de consenso) es _asegurar la cadena de bloques_, mientras se mantiene el control sobre el sistema descentralizado y difundido entre tantos participantes como sea posible. La recompensa de la moneda recién acuñada es un incentivo para quienes contribuyen a la seguridad del sistema: un medio para un fin. En ese sentido, la recompensa son los medios y la seguridad descentralizada es el fin. En el consenso de PoW también hay un "castigo" correspondiente, que es el costo de la energía necesaria para participar en la minería. Si los participantes no siguen las reglas y aún así obtienen una recompensa, arriesgan los fondos que ya han gastado en electricidad para extraerla. Por lo tanto, el consenso de PoW es un equilibrio cuidadoso de riesgo y recompensa que impulsa a los participantes a comportarse honestamente por interés propio.

Ethereum es actualmente una cadena de bloques de consenso por PoW, ya que utiliza un algoritmo de PoW con el mismo sistema de incentivos básico para el mismo objetivo básico: asegurar la cadena de bloques mientras se descentraliza el control. El algoritmo PoW de Ethereum es ligeramente diferente al de Bitcoin y se llama _Ethash_. Examinaremos la función y las características de diseño de este algoritmo en <<ethash>>.

=== Consenso Mediante de la Prueba de Colaterales (del inglés, PoS)

((("consenso","vía prueba de colaterales")))((("prueba de colaterales (PoS)","consenso a través de")))Históricamente, la prueba de trabajo no fue el primer algoritmo de consenso propuesto. Antes de la introducción de la prueba de trabajo, muchos investigadores habían propuesto variaciones de algoritmos de consenso basados en la participación financiera, ahora llamados _ prueba de colaterales_ (del inglés, "Proof of Stake" o PoS). En algunos aspectos, la prueba de trabajo se inventó como una alternativa a la prueba de colaterales. Tras el éxito de Bitcoin, muchas cadenas de bloques han emulado la prueba de trabajo. Sin embargo, la explosión en torno a la investigación de algoritmos de consenso, también ha resucitado la prueba de colaterales, lo que ha avanzado significativamente el estado de esta tecnología. Desde el principio, los fundadores de Ethereum esperaban eventualmente migrar su algoritmo de consenso a la prueba de colaterales. De hecho, existe una desventaja deliberada en la prueba de trabajo de Ethereum llamada _bomba de dificultad_, destinada a hacer gradualmente más difícil la minería a través de la prueba de trabajo en Ethereum, lo que le obligaría a la transición a la prueba de colaterales.

Al momento de la publicación de este libro, Ethereum todavía está usando la prueba de trabajo, pero la investigación en curso hacia una alternativa de prueba de colaterales está a punto de completarse. El algoritmo PoS planificado de Ethereum se llama _Casper_. La introducción de Casper como reemplazo de Ethash se ha pospuesto varias veces durante los últimos dos años, lo que ha requerido intervenciones para desactivar la bomba de dificultad y posponer la obsolescencia forzada de la prueba de trabajo.

En general, un algoritmo de PoS funciona de la siguiente manera. La cadena de bloques realiza un seguimiento de un conjunto de validadores, y cualquier persona que tenga la criptomoneda base de la cadena de bloques (en el caso de Ethereum, éter) puede convertirse en un validador enviando un tipo especial de transacción que bloquea su éter en un depósito. Los validadores se turnan para proponer y votar sobre el siguiente bloque válido, y el peso del voto de cada validador depende del tamaño de su depósito (es decir, su colateral). Es importante destacar que un validador corre el riesgo de perder su depósito si el bloque en el que lo apostó es rechazado por la mayoría de los validadores. Por el contrario, los validadores obtienen una pequeña recompensa, proporcional a su participación depositada, por cada bloque aceptado por la mayoría. Por lo tanto, PoS obliga a los validadores a actuar con honestidad y seguir las reglas de consenso, mediante un sistema de recompensa y castigo. La principal diferencia entre PoS y PoW es que el castigo en PoS es intrínseco a la cadena de bloques (por ejemplo, pérdida del éter colateralizado), mientras que en PoW el castigo es extrínseco (por ejemplo, pérdida de fondos gastados en pass:[<span class="keep-together">electricidad</span>]).

[[ethash]]
=== Ethash: El Algoritmo de Prueba-de-Trabajo de Ethereum

((("Buterin, Vitalik","y el algoritmo Dagger")))((("consenso","Ethash como algoritmo PoW de Ethereum")))((("algoritmo Dagger-Hashimoto")))((("Ethash")))((("prueba de trabajo (PoW)","Ethash como algoritmo PoW de Ethereum")))Ethash es el algoritmo PoW de Ethereum. Utiliza una evolución del algoritmo Dagger-Hashimoto, que es una combinación del algoritmo Dagger de Vitalik Buterin y el algoritmo Hashimoto de Thaddeus Dryja. ((("DAG (grafo acíclico dirigido)")))((("grafo acíclico dirigido (DAG)")))Ethash depende de la generación y el análisis de un gran conjunto de datos, conocido como _grafo acíclico dirigido_ (del inglés "directed acyclic graph", o más simplemente, &#x201c;el DAG&#x201d;)). El DAG tenía un tamaño inicial de aproximadamente 1 GB y continuará creciendo de manera lenta y lineal, actualizándose una vez cada época (30,000 bloques, o aproximadamente, cada 125 horas).

El propósito del DAG es hacer que el algoritmo PoW denominado Ethash, dependa del mantenimiento de una gran estructura de datos a la que se accede con frecuencia. ((("circuitos integrados de aplicaciones específicas (ASIC)"))) ((("ASIC (circuitos integrados de aplicaciones específicas)"))) ((("unidad de procesamiento de gráficos (GPU), minería y"))) DAG a su vez, está destinado a hacer que Ethash sea "resistente a los ASIC", lo que significa que debe ser más difícil fabricar equipos de minería en forma de _circuitos integrados de aplicaciones específicas_ (del inglés, ASIC) que sean órdenes de magnitud más rápidos que una _unidad de procesamiento de gráficos_ (o del inglés, GPU) muy veloz. Los fundadores de Ethereum querían evitar la centralización en la minería PoW, donde aquellos con acceso a fábricas especializadas de fabricación de silicio y grandes presupuestos podrían dominar la infraestructura minera y socavar la seguridad del algoritmo de consenso.

El uso de las GPU a nivel de consumidor para llevar a cabo el PoW en la red Ethereum significa que más personas en todo el mundo pueden participar del proceso de minería. Cuantos más mineros independientes existan, más descentralizado es el poder minero, lo que significa que podemos evitar una situación como la de Bitcoin, donde gran parte del poder minero se concentra en manos de unas pocas grandes operaciones mineras industriales. La desventaja del uso de las GPU para la minería es que precipitó una escasez mundial de GPUs en 2017, lo que provocó que su precio se disparara y una protesta de los jugadores. Esto llevó a restricciones de compra en los minoristas, lo que limitó a los compradores a una o dos GPU por cliente.

Hasta hace poco, la amenaza de los mineros ASIC en la red Ethereum era en gran parte inexistente. El uso de ASIC para Ethereum requiere del diseño, fabricación y distribución de hardware altamente personalizado. Producirlos requiere una inversión considerable de tiempo y dinero. Los planes expresados durante mucho tiempo por los desarrolladores de Ethereum para pasar a un algoritmo de consenso de PoS probablemente mantuvieron a los proveedores de ASIC lejos de apuntar a la red Ethereum durante mucho tiempo. Tan pronto como Ethereum pase a PoS, los ASIC diseñados para el algoritmo PoW se volverán inútiles, es decir, a menos que los mineros puedan usarlos para extraer otras criptomonedas. La última posibilidad es ahora una realidad con una gama de otras monedas de consenso basadas en Ethash disponibles, como PIRL y Ubiq; además que Ethereum Classic recién se ha comprometido a seguir siendo una cadena de bloques con base a PoW en el futuro previsible. Esto significa que es probable que veamos que la minería ASIC comience a convertirse en una fuerza importante en la red Ethereum mientras siga operando bajo el consenso de PoW.

=== Casper: El Algoritmo de Prueba de Colaterales de Ethereum

((("Casper")))((("consenso","Casper como el algoritmo PoS de Ethereum")))((("prueba de colaterales (PoS)","Casper como el algoritmo PoS de Ethereum")))Casper es el nombre propuesto para el algoritmo de consenso PoS de Ethereum. Todavía se encuentra en una fase activa de investigación y desarrollo y no está aún implementado en la cadena de bloques de Ethereum en el momento de la publicación de este libro. ((("Casper CBC")))((("Casper FFG")))Casper se está desarrollando en dos "sabores" que compiten entre sí:

* Casper FFG: "El Gadget de Resolución Amistosa" (del inglés "Friendly Finality Gadget", o FFG)
* Casper CBC: "El GHOST Amistoso/Correcto-por-Construcción" (del inglés "Correct-by-Construction")

Inicialmente, Casper FFG se propuso como un algoritmo híbrido entre PoW y PoS para ser implementado como una transición a un algoritmo de "PoS puro" más permanente. ((("Buterin, Vitalik","y Casper")))Pero en junio de 2018, Vitalik Buterin, quien dirigía el trabajo de investigación sobre Casper FFG, decidió "desechar" el modelo híbrido en favor de un algoritmo PoS puro. Ahora, tanto Casper FFG como Casper CBC se están desarrollando en paralelo. Como explica Vitalik:

____
El principal compromiso entre FFG y CBC es que CBC parece tener mejores propiedades teóricas, pero FFG parece ser más fácil de implementar.
____

Se puede encontrar más información sobre la historia de Casper, la investigación en curso y los planes futuros en los siguientes enlaces:

* http://bit.ly/2RO5HAl[Ethereum Casper (Proof of Stake)]
* http://bit.ly/2FlBojb[Historia de Casper, Parte 1]
* http://bit.ly/2QyHiic[Historia de Casper, Parte 2]
* http://bit.ly/2JWWFyt[Historia de Casper, Parte 3]
* http://bit.ly/2FsaExI[Historia de Casper, Parte 4]
* http://bit.ly/2PPhhOv[Historia de Casper, Parte 5]

=== Principios de Consenso

((("consenso","principios de")))Los principios y supuestos de los algoritmos de consenso pueden entenderse más claramente haciendo algunas preguntas clave:

* ¿Quién puede cambiar el pasado y cómo? (Lo que también se conoce como _inmutabilidad_).
* ¿Quién puede cambiar el futuro y cómo? (Esto también se conoce como _resolución_).
* ¿Cuál es el costo de realizar tales cambios?
* ¿Qué tan descentralizado está el poder para realizar tales cambios?
* ¿Quién sabría si algo ha cambiado y cómo lo sabría?

Los algoritmos de consenso están evolucionando rápidamente, intentando responder a estas preguntas de formas cada vez más innovadoras.

=== Controversia y Competencia

((("consenso","controversia y competencia")))En este punto, es posible preguntarnos: ¿Por qué necesitamos tantos algoritmos de consenso diferentes? ¿Cual funciona mejor? La respuesta a la última pregunta está en el centro del área de investigación más interesante en sistemas distribuidos de la última década. Todo se reduce a lo que podamos considerar "mejor&#x201d;&#x2014;que en el contexto de la informática se trata de supuestos, metas y los inevitables ajustes de diseño.

Es probable que ningún algoritmo pueda optimizar todas las dimensiones del problema del consenso descentralizado. Cuando alguien sugiere que un algoritmo de consenso es "mejor" que los demás, debe comenzar a hacer preguntas que aclaren: ¿Mejor en qué? ¿Inmutabilidad, finalidad, descentralización, coste? No hay una respuesta clara a estas preguntas, al menos todavía no. Además, el diseño de algoritmos de consenso está en el centro de una industria multimillonaria y genera una enorme controversia y discusiones acaloradas. Al final, puede que no haya una respuesta "correcta", al igual que pueden haber diferentes respuestas para diferentes aplicaciones.

Toda la industria de la cadena de bloques es un experimento gigante en el que estas preguntas se probarán en condiciones adversas, con un enorme valor monetario en juego. Al final, será la historia la que responda a estas polémicas.

=== Conclusiones

El algoritmo de consenso de Ethereum todavía está en proceso de cambio en el momento de la finalización de este libro. En una edición futura, es probable que agreguemos más detalles sobre Casper y otras tecnologías relacionadas a medida que maduran y se implementan en Ethereum. Este capítulo representa el final de nuestro viaje, completando _Dominando el Ethereum_. En los apéndices se incluye material de referencia adicional. ¡Gracias por leer este libro y felicitaciones por llegar al final!(((range="endofrange", startref="ix_14consensus-asciidoc0")))